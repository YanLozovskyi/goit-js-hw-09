{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,SAAUF,SAASC,cAAc,WAKnC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbP,EAAKC,OAAOc,iBAAiB,UAe7B,SAAsBC,GACpBA,EAAEC,iBAEFjB,EAAKI,SAASc,aAAa,WAAY,IACrC,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAEO,cAMFC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAIG,EAAeL,EACfM,EAAe,EAEnB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EACpC1B,EAAcyB,EAAcD,GACzBG,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAAnC,GAASoC,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAW,CAC/C6B,cAAc,GACjB,IAEFC,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAAnC,GAASoC,OAAOI,QACd,sBAAoBhC,QAAeC,MAAW,CAC5C6B,cAAc,GACjB,IAEFG,SAAQ,KACPvC,EAAKI,SAASoC,gBAAgB,YAC9BxC,EAAKC,OAAOwC,OAAO,IAEvBZ,GAAgBF,EAChBG,GAAgB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  buttonEl: document.querySelector('button'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  refs.buttonEl.setAttribute('disabled', '');\n    const {\n      elements: { delay, step, amount },\n    } = e.currentTarget;\n\n//   const delay = refs.formEl.elements.delay;\n//   const step = refs.formEl.elements.step;\n//   const amount = refs.formEl.elements.amount;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  let promiseDelay = delayValue;\n  let promiseCount = 1;\n\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(promiseCount, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          { clickToClose: true }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          { clickToClose: true }\n        );\n      })\n      .finally(() => {\n        refs.buttonEl.removeAttribute('disabled');\n        refs.formEl.reset();\n      });\n    promiseDelay += stepValue;\n    promiseCount += 1;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","buttonEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","setAttribute","elements","delay1","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","promiseDelay","promiseCount","i","then","$parcel$interopDefault","Notify","success","clickToClose","catch","failure","finally","removeAttribute","reset"],"version":3,"file":"03-promises.b80e34b3.js.map"}