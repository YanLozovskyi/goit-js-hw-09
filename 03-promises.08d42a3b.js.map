{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,SAAUF,SAASC,cAAc,UACjCE,YAAaH,SAASC,cAAc,uBAmBtC,SAASG,IACPN,EAAKK,YAAYE,MAAQ,W,CAG3B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7BPV,EAAKC,OAAOiB,iBAAiB,UAiC7B,SAAsBC,GACpBA,EAAEC,iBAEFpB,EAAKI,SAASiB,aAAa,WAAY,IAiBvC,IAhBA,IAEmBC,EAAfH,EAAEI,cADJC,SAAYC,EAA0BH,EAA1B,aAA4BI,EAAKJ,EAALZ,MAAOiB,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAOjDC,EAAWJ,EAAclB,MACzBuB,EAAaC,OAAOL,EAAMnB,OAC1ByB,EAAYD,OAAOJ,EAAKpB,OACxB0B,EAAcF,OAAOH,EAAOrB,OAE9B2B,EAAeJ,EACfK,EAAe,EAEVC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EACpC5B,EAAc2B,EAAcD,GACzBG,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAzC,GAAS0C,OAAOC,QACd,MAAuCC,OAAjCb,EAAS,0BAAyCa,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAC5D,CAAAiC,cAAc,G,IAGnBC,OAAM,SAAAN,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAzC,GAAS0C,OAAOK,QACd,MAAuCH,OAAjCb,EAAS,0BAAuCa,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAC5D,CAAEiC,cAAc,G,IAGnBG,SAAQ,WACP9C,EAAKI,SAAS2C,gBAAgB,YAC9B/C,EAAKC,OAAO+C,QACZ1C,G,IAEJ4B,GAAgBF,EAChBG,GAAgB,C,IAxEpBnC,EAAKK,YAAYa,iBAAiB,SAKlC,WACElB,EAAKK,YAAYE,MAAQ,E,IAL3BP,EAAKK,YAAYa,iBAAiB,QAQlC,WACiC,KAA3BlB,EAAKK,YAAYE,QACnBP,EAAKK,YAAYE,MAAQ,Y,IAR7BD,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  buttonEl: document.querySelector('button'),\n  inputNameEl: document.querySelector('input[type=\"text\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\nrefs.inputNameEl.addEventListener('focus', onFocusName);\nrefs.inputNameEl.addEventListener('blur', onBlurName);\n\nsetPlaceholder();\n\nfunction onFocusName() {\n  refs.inputNameEl.value = '';\n}\n\nfunction onBlurName() {\n  if (refs.inputNameEl.value === '') {\n    refs.inputNameEl.value = 'Anonymous';\n  }\n}\n\nfunction setPlaceholder() {\n  refs.inputNameEl.value = 'Anonymous';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  refs.buttonEl.setAttribute('disabled', '');\n  const {\n    elements: { 'user-name': userNameInput, delay, step, amount },\n  } = e.currentTarget;\n\n  //   const delay = refs.formEl.elements.delay;\n  //   const step = refs.formEl.elements.step;\n  //   const amount = refs.formEl.elements.amount;\n\n  const userName = userNameInput.value;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  let promiseDelay = delayValue;\n  let promiseCount = 1;\n\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(promiseCount, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Hi ${userName}, ✅ Fulfilled promise ${position} in ${delay}ms`,\n          { clickToClose: true }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Hi ${userName} , ❌ Rejected promise ${position} in ${delay}ms`,\n          { clickToClose: true }\n        );\n      })\n      .finally(() => {\n        refs.buttonEl.removeAttribute('disabled');\n        refs.formEl.reset();\n        setPlaceholder();\n      });\n    promiseDelay += stepValue;\n    promiseCount += 1;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","buttonEl","inputNameEl","$ce04d3a99e08e73b$var$setPlaceholder","value","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","setAttribute","_elements","currentTarget","elements","userNameInput","delay1","step","amount","userName","delayValue","Number","stepValue","amountValue","promiseDelay","promiseCount","i","then","param","$parcel$interopDefault","Notify","success","concat","clickToClose","catch","failure","finally","removeAttribute","reset"],"version":3,"file":"03-promises.08d42a3b.js.map"}